use crate::pt::*;

grammar;

pub Func: Func = {
    <s:Suite> => {
        Func { body: s }
    },
}

pub Suite: Vec<Statement> = {
    <s:Statement*> => {
        Block {
            stmts: s
        }
    }
}

pub Statement: Statement = {
    <e:Expression> ";" => {
        Statement { expr: e }
    }
}

Expression: Expression = {
    <e:Expression> => e,
}

NotExpression: Expression = {
    <l:@L> "!" <r:@R> <e:NotExpression> => {
       Expression { }
    },
    PrimaryExpression
}

PrimaryExpression: Expression = {
    <FunctionCall> => <>,
    ParenthesizedExpression,
    NormalExpr,
}

FunctionCall: Expression = {
    <l:@L> <f:PrimaryExpression> "(" ")" <r:@R> => {
        Expression {

        }
    }
}

NormalExpr: Expression = {
    "func" => {
        Expression {}
    }
}

ParenthesizedExpression: Expression = {
    "(" <e:Expression> ")" => e,
}

